{"name":"Request-ip","tagline":"A tiny node.js module for retrieving a request's IP address.","body":"#request-ip\r\n\r\nA tiny Node.js module for retrieving a request's IP address. \r\n\r\n![](https://nodei.co/npm/request-ip.png?downloads=true&cacheBust=2)\r\n\r\n![](https://travis-ci.org/pbojinov/request-ip.svg?branch=master)\r\n[![Coverage Status](https://coveralls.io/repos/pbojinov/request-ip/badge.svg)](https://coveralls.io/r/pbojinov/request-ip)\r\n\r\n## Installation\r\n\r\n    npm install request-ip --save\r\n    \r\n## Getting Started\r\n\r\n```javascript\r\nvar requestIp = require('request-ip');\r\n\r\n// inside middleware handler\r\nvar ipMiddleware = function(req, res, next) {\r\n    var clientIp = requestIp.getClientIp(req); \r\n    next();\r\n};\r\n\r\n// on localhost you'll see 127.0.0.1 if you're using IPv4 \r\n// or ::1, ::ffff:127.0.0.1 if you're using IPv6\r\n```\r\n\r\n### As Connect Middleware\r\n\r\n```javascript\r\nvar requestIp = require('request-ip');\r\napp.use(requestIp.mw())\r\n\r\napp.use(function(req, res) {\r\n    var ip = req.clientIp;\r\n    res.end(ip);\r\n});\r\n```\r\n\r\nTo see a full working code for the middleware, check out the [examples](https://github.com/pbojinov/request-ip/tree/master/examples) folder.\r\n\r\nThe connect-middleware also supports retrieving the ip address under a custom attribute name, which also works as a container for any future settings. \r\n\r\n## How It Works\r\n\r\nIt looks for specific headers in the request and falls back to some defaults if they do not exist.\r\n\r\nThe following is the order we use to determine the user ip from the request.\r\n\r\n1. `X-Client-IP`  \r\n2. `X-Forwarded-For` header may return multiple IP addresses in the format: \"client IP, proxy 1 IP, proxy 2 IP\", so we take the the first one.\r\n3. `X-Real-IP` (nginx proxy/FastCGI)\r\n5. `X-Cluster-Client-IP` (Rackspace LB, Riverbed Stingray)\r\n6. Permuations of #2 such as: `X-Forwarded`, `Forwarded-For` and `Forwarded`\r\n7. `req.connection.remoteAddress`\r\n8. `req.socket.remoteAddress`\r\n9. `req.connection.socket.remoteAddress`\r\n10. `req.info.remoteAddress`\r\n\r\nIf cannot find an IP address, it will return `null`.\r\n\r\n## Samples Use Cases\r\n\r\n* Getting a user's IP for geolocation.\r\n\r\n## Dependencies\r\n\r\nNone\r\n\r\n## Running the Tests\r\n\r\nMake sure you have the necessary dev dependencies needed to run the tests:\r\n\r\n```\r\nnpm install\r\n```\r\n\r\nRun the integration tests\r\n\r\n```\r\nnpm test\r\n```\r\n\r\n## Release Notes\r\n\r\nSee the wonderful [changelog](https://github.com/pbojinov/request-ip/blob/master/CHANGELOG.md)\r\n\r\nTo easily generate a new changelog, install [github-changelog-generator](https://github.com/skywinder/github-changelog-generator) then run `npm run changelog`.\r\n\r\n## Contributors\r\n\r\nThanks to [@osherx](https://github.com/osherx) for adding the connect-middleware.\r\n\r\n## License\r\n\r\nThe MIT License (MIT) - 2016\r\n","google":"UA-32986721-11","note":"Don't delete this file! It's used internally to help with page regeneration."}